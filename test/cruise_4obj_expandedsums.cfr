/*
Example from <a href="http://t3-necsis.cs.uwaterloo.ca:8091/NECSIS-Workshop/Modeling%20Quality%204" target="exampleSource">wiki</a>
*/

abstract Feature
    cost ->> integer
    mass ->> integer

abstract ComfortFeature : Feature
    comfort ->> integer

abstract FuelFeature : ComfortFeature
    fuel ->> integer
    
abstract Car
    ABS : ComfortFeature ?
        [cost = 2]
        [mass = 1]
        [comfort = 1]        
    xor Transmission : Feature
        [cost = 0]
        [mass = 0]        
        Automatic : FuelFeature
            [fuel = 2]
            [mass = 1]            
            [comfort = 2]
            [cost = 4]     
        Manual : FuelFeature
            [fuel = 0]
            [mass = 1]            
            [comfort = 1]
            [cost = 3]
    FCA : FuelFeature ?
        [fuel = 2]
        [mass = 2] 
        [comfort = 4]
        [cost = 5]        
        xor Sensor : Feature
            [cost = 0]
            [mass = 0]
            Radar : Feature
                [cost = 3]
                [mass = 1]
            Lidar : Feature
                [cost = 5]
                [mass = 1]            
        xor Alert : Feature ?
            [cost = 0]
            [mass = 0]
            Haptic : ComfortFeature
                [comfort = 4]
                [cost = 2]
                [mass = 1]
            Audible : ComfortFeature
                [comfort = 2]
                [cost = 1]
                [mass = 1]
    CC : FuelFeature ?
        [fuel = 1]
        [mass = 1]
        [comfort = 3]
        [cost = 4]
        ACC : FuelFeature ?
            [fuel = 2]
            [mass = 2]
            [comfort = 6]
            [cost = 3]
    [ ACC => FCA]
    
    total_cost ->> integer// = sum Feature.cost
    total_comfort ->> integer// = sum ComfortFeature.cost
    total_fuel ->> integer// = sum FuelFeature.cost
    total_mass ->> integer// = sum FuelFeature.mass
    
    [total_cost = Audible.cost + Haptic.cost + ABS.cost + Automatic.cost + Manual.cost + FCA.cost + CC.cost + ACC.cost + Alert.cost + Sensor.cost + Radar.cost + Lidar.cost ]
    [total_comfort = Audible.cost + Haptic.cost + ABS.cost + Automatic.cost + Manual.cost + FCA.cost + CC.cost + ACC.cost]
    [total_fuel = CC.cost + ACC.cost + FCA.cost + Manual.cost + Automatic.cost]
    [total_mass = CC.cost + ACC.mass + FCA.mass + Manual.mass + Automatic.mass]	
    
    
optimalCar : Car

<< min optimalCar.total_cost >>
<< min optimalCar.total_fuel >>
<< max optimalCar.total_comfort >>
<< min optimalCar.total_mass >>